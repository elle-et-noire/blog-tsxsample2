{"pageProps":{"post":{"title":"正規積同士の積","date":"2023-10-03","tags":["qft"],"description":"正規積同士をかける公式の説明。","year":"2023","month":"10","slug":"normal-prod-prod","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [_jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\n\\\\def\\\\nprod#1{{\\\\colon{#1}\\\\colon}}\n$$`\n        }), \"\\n正規積は次のように定義していいだろう：\\n\", _jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\nX = \\\\ev{X} + \\\\nprod{X}.\n$$`\n        }), \"ただし\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}X\\\\hspace{0.2em}\\\\)`\n        }), \"には局所演算子の積が入る。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"またWickの定理も重要である：\\n\", _jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\n\\\\prod_{i}A_i=\\\\nprod{\\\\prod_i A_i}+\\\\sum_{i\\\\neq j}\\\\ev{A_iA_j}\\\\nprod{\\\\prod{l\\\\neq i,j}A_l}+\\\\sum_{i,j,k,l}\\\\ev{A_iA_j}\\\\ev{A_kA_l}\\\\nprod{\\\\prod_{m\\\\neq i,j,k,l}A_m}+\\\\cdots.\n$$`\n        }), \"\\nここから\\n\", _jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\n\\\\ev{\\\\prod_i A_i}=\\\\prod_i A_i-\\\\nprod{\\\\prod_i A_i}\n$$`\n        }), \"を用いて真空期待値を2点相関関数と正規積で表せる。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"正規積同士の積が次のようになることを（なんとなく）示す：\\n\", _jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\n\\\\nprod{\\\\prod_i A_i}\\\\nprod{\\\\prod_j B_j}=\\\\sum_{i,j}\\\\ev{A_i B_j}\\\\nprod{\\\\prod_{k\\\\neq i,l\\\\neq j}A_kB_l}.\n$$`\n        }), \"それぞれ2つずつくらいならすぐに確かめられる。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"左辺は\\n\", _jsx(\"div\", {\n          className: \"scrollable\",\n          children: `$$\n\\\\qty(\\\\prod_i A_i-\\\\ev{\\\\prod_i A_i})\\\\qty(\\\\prod_j B_j-\\\\ev{\\\\prod_j B_j})\n$$`\n        }), \"と言っている。初項同士の積に含まれていて他の項に含まれていないものが残る項である（末項同士がプラスで違和感があるかもしれないが、二重に引いてしまう項を付け加えているだけのことである）。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"そのような項はずばり、2点相関関数として\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}A_i\\\\hspace{0.2em}\\\\)`\n        }), \"と\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}B_j\\\\hspace{0.2em}\\\\)`\n        }), \"の間のもののみを含み、残りがすべて正規積になっている項である。\", _jsx(\"span\", {\n          children: `\\\\(\\\\nprod{\\\\prod_i A_i\\\\prod_j B_j}\\\\hspace{0.2em}\\\\)`\n        }), \"とか\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{A_1B_2}\\\\nprod{A_2A_3\\\\cdots B_1B_3\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"とか\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{A_1B_3}\\\\ev{A_2B_1}\\\\nprod{A_3\\\\cdots B_2\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"とかである。\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"例えば初項同士から出てくる\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{A_1B_1}{A_2A_3}\\\\nprods{\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"のような項はどうか。この項は\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{\\\\prod_i A_i}\\\\prod_jB_j\\\\hspace{0.2em}\\\\)`\n        }), \"も含む。\", _jsx(\"span\", {\n          children: `\\\\(\\\\ev{\\\\prod_iA_i}\\\\hspace{0.2em}\\\\)`\n        }), \"から出てくる\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{A_2A_3}\\\\nprod{A_1\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"と\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}B_1\\\\cdots\\\\hspace{0.2em}\\\\)`\n        }), \"から出てくる\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\nprod{B_1\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"の掛け算で、帰納的に正規積同士の積が\", _jsx(\"span\", {\n          children: `\\\\(\\\\hspace{0.2em}\\\\ev{A_2A_3}\\\\ev{A_1B_1}\\\\nprod{\\\\cdots}\\\\hspace{0.2em}\\\\)`\n        }), \"となって出てくる。そしてこのような項は1回しか出てこず、きれいに打ち消してしまう。\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"したがって残るのは上で述べたようなものだけである。\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"mathblocks":[]},"__N_SSG":true}